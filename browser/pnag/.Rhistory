right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
for (i in names(kegg_frysig)) {
print(i)
print(dim(kegg_frysig[[i]]))
print(kegg_frysig[[i]][,c(1,2,4,7)])
kegg_siggos <- c(kegg_siggos, rownames(kegg_frysig[[i]][,]))  # can be modified
}
kegg_siggos <- unique(kegg_siggos[!grepl("NA", kegg_siggos)])
idx_kegg_char <- lapply(idx_kegg, as.character)
# I create a dataframe with mean logFC values for each significant GO-term:
hm_kegg <- t(as.data.frame(lapply(idx_kegg_char[kegg_siggos], function(x){
sapply(names(all_res_tmm), function(y){
mean(na.omit(all_res_tmm[[y]]$table[x,]$logFC))
})
})))
hm_kegg <- as.data.frame(hm_kegg)
rownames(hm_kegg) <- gsub("\\.", "\\:", rownames(hm_kegg))
hm_kegg
hm_kegg <- hm_kegg[order(hm_kegg[,1], decreasing = T),]
kegg_sizes <- sapply(idx_kegg_char[rownames(hm_kegg)], function(x) length(x))
pvals <- data.frame(sapply(names(kegg_fry),
function(x) kegg_fry[[x]][rownames(hm_kegg),"FDR"]),
row.names = rownames(hm_kegg))
#select only significant ones:
pvals <-sapply(pvals, function(x) ifelse(x<0.001, x <- "*", x<-"") )
keggpws <- kegg_fry$PNA179[rownames(hm_kegg),] [["TERM"]]
rownames(hm_kegg) <- ifelse(!is.na(keggpws),keggpws, rownames(hm_kegg) )
col_fun = colorRamp2(c(-1,0, 1), c("blue", "white", "red"))
ht_vert <- Heatmap(hm_kegg, cluster_rows = F, cluster_columns = F,
name = "GO-analysis", col = col_fun,
show_heatmap_legend = F,
row_title_side = "right", row_title_rot = 0,
border = TRUE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1s", pvals[i, j]), x, y)
},
column_names_gp = gpar(fontsize = 11),
row_names_gp = gpar(fontsize = 10),
row_title = NULL,
width = unit(12, "cm"), height = unit(15, "cm"),
right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
ht_vert <- Heatmap(hm_kegg, cluster_rows = F, cluster_columns = F,
name = "GO-analysis", col = col_fun,
show_heatmap_legend = F,
row_title_side = "right", row_title_rot = 0,
border = TRUE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1s", pvals[i, j]), x, y)
},
column_names_gp = gpar(fontsize = 11),
row_names_gp = gpar(fontsize = 10),
row_title = NULL,
width = unit(12, "cm"), height = unit(30, "cm"),
right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
for (i in names(kegg_frysig)) {
print(i)
print(dim(kegg_frysig[[i]]))
print(kegg_frysig[[i]][,c(1,2,4,7)])
kegg_siggos <- c(kegg_siggos, rownames(kegg_frysig[[i]][1:20,]))  # can be modified
}
kegg_siggos <- unique(kegg_siggos[!grepl("NA", kegg_siggos)])
idx_kegg_char <- lapply(idx_kegg, as.character)
# I create a dataframe with mean logFC values for each significant GO-term:
hm_kegg <- t(as.data.frame(lapply(idx_kegg_char[kegg_siggos], function(x){
sapply(names(all_res_tmm), function(y){
mean(na.omit(all_res_tmm[[y]]$table[x,]$logFC))
})
})))
hm_kegg <- as.data.frame(hm_kegg)
rownames(hm_kegg) <- gsub("\\.", "\\:", rownames(hm_kegg))
hm_kegg <- hm_kegg[order(hm_kegg[,1], decreasing = T),]
kegg_sizes <- sapply(idx_kegg_char[rownames(hm_kegg)], function(x) length(x))
pvals <- data.frame(sapply(names(kegg_fry),
function(x) kegg_fry[[x]][rownames(hm_kegg),"FDR"]),
row.names = rownames(hm_kegg))
#select only significant ones:
pvals <-sapply(pvals, function(x) ifelse(x<0.001, x <- "*", x<-"") )
keggpws <- kegg_fry$PNA179[rownames(hm_kegg),] [["TERM"]]
rownames(hm_kegg) <- ifelse(!is.na(keggpws),keggpws, rownames(hm_kegg) )
col_fun = colorRamp2(c(-1,0, 1), c("blue", "white", "red"))
ht_vert <- Heatmap(hm_kegg, cluster_rows = F, cluster_columns = F,
name = "GO-analysis", col = col_fun,
show_heatmap_legend = F,
row_title_side = "right", row_title_rot = 0,
border = TRUE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1s", pvals[i, j]), x, y)
},
column_names_gp = gpar(fontsize = 11),
row_names_gp = gpar(fontsize = 10),
row_title = NULL,
width = unit(12, "cm"), height = unit(15, "cm"),
right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
ht_vert <- Heatmap(hm_kegg, cluster_rows = F, cluster_columns = F,
name = "GO-analysis", col = col_fun,
show_heatmap_legend = F,
row_title_side = "right", row_title_rot = 0,
border = TRUE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1s", pvals[i, j]), x, y)
},
column_names_gp = gpar(fontsize = 11),
row_names_gp = gpar(fontsize = 10),
row_title = NULL,
width = unit(12, "cm"), height = unit(25, "cm"),
right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
kegg_siggos <- c(kegg_siggos, rownames(kegg_frysig[[i]][1:15,]))  # can be modified
for (i in names(kegg_frysig)) {
print(i)
print(dim(kegg_frysig[[i]]))
print(kegg_frysig[[i]][,c(1,2,4,7)])
kegg_siggos <- c(kegg_siggos, rownames(kegg_frysig[[i]][1:15,]))  # can be modified
}
kegg_siggos <- unique(kegg_siggos[!grepl("NA", kegg_siggos)])
idx_kegg_char <- lapply(idx_kegg, as.character)
# I create a dataframe with mean logFC values for each significant GO-term:
hm_kegg <- t(as.data.frame(lapply(idx_kegg_char[kegg_siggos], function(x){
sapply(names(all_res_tmm), function(y){
mean(na.omit(all_res_tmm[[y]]$table[x,]$logFC))
})
})))
hm_kegg <- as.data.frame(hm_kegg)
rownames(hm_kegg) <- gsub("\\.", "\\:", rownames(hm_kegg))
hm_kegg <- hm_kegg[order(hm_kegg[,1], decreasing = T),]
kegg_sizes <- sapply(idx_kegg_char[rownames(hm_kegg)], function(x) length(x))
pvals <- data.frame(sapply(names(kegg_fry),
function(x) kegg_fry[[x]][rownames(hm_kegg),"FDR"]),
row.names = rownames(hm_kegg))
#select only significant ones:
pvals <-sapply(pvals, function(x) ifelse(x<0.001, x <- "*", x<-"") )
keggpws <- kegg_fry$PNA179[rownames(hm_kegg),] [["TERM"]]
rownames(hm_kegg) <- ifelse(!is.na(keggpws),keggpws, rownames(hm_kegg) )
col_fun = colorRamp2(c(-1,0, 1), c("steelblue", "white", "darkorange"))
ht_vert <- Heatmap(hm_kegg, cluster_rows = F, cluster_columns = F,
name = "GO-analysis", col = col_fun,
show_heatmap_legend = F,
row_title_side = "right", row_title_rot = 0,
border = TRUE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1s", pvals[i, j]), x, y)
},
column_names_gp = gpar(fontsize = 11),
row_names_gp = gpar(fontsize = 10),
row_title = NULL,
width = unit(12, "cm"), height = unit(25, "cm"),
right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
kegg_siggos <- c(kegg_siggos, rownames(kegg_frysig[[i]][1:10,]))  # can be modified
for (i in names(kegg_frysig)) {
print(i)
print(dim(kegg_frysig[[i]]))
print(kegg_frysig[[i]][,c(1,2,4,7)])
kegg_siggos <- c(kegg_siggos, rownames(kegg_frysig[[i]][1:10,]))  # can be modified
}
kegg_siggos <- unique(kegg_siggos[!grepl("NA", kegg_siggos)])
idx_kegg_char <- lapply(idx_kegg, as.character)
# I create a dataframe with mean logFC values for each significant GO-term:
hm_kegg <- t(as.data.frame(lapply(idx_kegg_char[kegg_siggos], function(x){
sapply(names(all_res_tmm), function(y){
mean(na.omit(all_res_tmm[[y]]$table[x,]$logFC))
})
})))
hm_kegg <- as.data.frame(hm_kegg)
rownames(hm_kegg) <- gsub("\\.", "\\:", rownames(hm_kegg))
hm_kegg <- hm_kegg[order(hm_kegg[,1], decreasing = T),]
kegg_sizes <- sapply(idx_kegg_char[rownames(hm_kegg)], function(x) length(x))
pvals <- data.frame(sapply(names(kegg_fry),
function(x) kegg_fry[[x]][rownames(hm_kegg),"FDR"]),
row.names = rownames(hm_kegg))
#select only significant ones:
pvals <-sapply(pvals, function(x) ifelse(x<0.001, x <- "*", x<-"") )
keggpws <- kegg_fry$PNA179[rownames(hm_kegg),] [["TERM"]]
rownames(hm_kegg) <- ifelse(!is.na(keggpws),keggpws, rownames(hm_kegg) )
col_fun = colorRamp2(c(-1,0, 1), c("steelblue", "white", "darkorange"))
ht_vert <- Heatmap(hm_kegg, cluster_rows = F, cluster_columns = F,
name = "GO-analysis", col = col_fun,
show_heatmap_legend = F,
row_title_side = "right", row_title_rot = 0,
border = TRUE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1s", pvals[i, j]), x, y)
},
column_names_gp = gpar(fontsize = 11),
row_names_gp = gpar(fontsize = 10),
row_title = NULL,
width = unit(12, "cm"), height = unit(25, "cm"),
right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
lgd = Legend(col_fun = col_fun, title = expression("mean log"[2]*" FC"), #direction = "horizontal",
title_gp = gpar(fontsize = 12), labels = c("-1", " 0"," 1"), legend_height = unit(6, "cm"),
at = c(-1, 0, 1), border = "black",
title_position = "leftcenter-rot")
draw(lgd)
svg("../analysis/pathway_analysis/hm_KEGG.svg", width = unit(12, "cm"),  height = unit(10, "cm"))
draw(ht_vert)
draw(lgd, x = unit(2, "cm"), y = unit(10, "cm"), just = c("left", "bottom"))
dev.off()
kegg_siggos <- c()
for (i in names(kegg_frysig)) {
print(i)
print(dim(kegg_frysig[[i]]))
print(kegg_frysig[[i]][,c(1,2,4,7)])
kegg_siggos <- c(kegg_siggos, rownames(kegg_frysig[[i]][1:15,]))  # can be modified
}
kegg_siggos <- unique(kegg_siggos[!grepl("NA", kegg_siggos)])
idx_kegg_char <- lapply(idx_kegg, as.character)
# I create a dataframe with mean logFC values for each significant GO-term:
hm_kegg <- t(as.data.frame(lapply(idx_kegg_char[kegg_siggos], function(x){
sapply(names(all_res_tmm), function(y){
mean(na.omit(all_res_tmm[[y]]$table[x,]$logFC))
})
})))
hm_kegg <- as.data.frame(hm_kegg)
rownames(hm_kegg) <- gsub("\\.", "\\:", rownames(hm_kegg))
hm_kegg <- hm_kegg[order(hm_kegg[,1], decreasing = T),]
kegg_sizes <- sapply(idx_kegg_char[rownames(hm_kegg)], function(x) length(x))
pvals <- data.frame(sapply(names(kegg_fry),
function(x) kegg_fry[[x]][rownames(hm_kegg),"FDR"]),
row.names = rownames(hm_kegg))
#select only significant ones:
pvals <-sapply(pvals, function(x) ifelse(x<0.001, x <- "*", x<-"") )
keggpws <- kegg_fry$PNA179[rownames(hm_kegg),] [["TERM"]]
rownames(hm_kegg) <- ifelse(!is.na(keggpws),keggpws, rownames(hm_kegg) )
col_fun = colorRamp2(c(-1,0, 1), c("steelblue", "white", "darkorange"))
ht_vert <- Heatmap(hm_kegg, cluster_rows = F, cluster_columns = F,
name = "GO-analysis", col = col_fun,
show_heatmap_legend = F,
row_title_side = "right", row_title_rot = 0,
border = TRUE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1s", pvals[i, j]), x, y)
},
column_names_gp = gpar(fontsize = 11),
row_names_gp = gpar(fontsize = 10),
row_title = NULL,
width = unit(12, "cm"), height = unit(25, "cm"),
right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
lgd = Legend(col_fun = col_fun, title = expression("mean log"[2]*" FC"), #direction = "horizontal",
title_gp = gpar(fontsize = 12), labels = c("-1", " 0"," 1"), legend_height = unit(6, "cm"),
at = c(-1, 0, 1), border = "black",
title_position = "leftcenter-rot")
draw(lgd)
svg("../analysis/pathway_analysis/hm_KEGG.svg", width = unit(12, "cm"),  height = unit(10, "cm"))
draw(ht_vert)
draw(lgd, x = unit(2, "cm"), y = unit(10, "cm"), just = c("left", "bottom"))
dev.off()
col_fun = colorRamp2(c(-1,0, 1), c("steelblue", "white", "darkorange"))
ht_vert <- Heatmap(hm_kegg, cluster_rows = F, cluster_columns = F,
name = "GO-analysis", col = col_fun,
show_heatmap_legend = F,
row_title_side = "right", row_title_rot = 0,
border = TRUE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1s", pvals[i, j]), x, y)
},
column_names_gp = gpar(fontsize = 11),
row_names_gp = gpar(fontsize = 10),
row_title = NULL,
width = unit(12, "cm"), height = unit(15, "cm"),
right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
lgd = Legend(col_fun = col_fun, title = expression("mean log"[2]*" FC"), #direction = "horizontal",
title_gp = gpar(fontsize = 12), labels = c("-1", " 0"," 1"), legend_height = unit(6, "cm"),
at = c(-1, 0, 1), border = "black",
title_position = "leftcenter-rot")
draw(lgd)
svg("../analysis/pathway_analysis/hm_KEGG.svg", width = unit(12, "cm"),  height = unit(10, "cm"))
draw(ht_vert)
draw(lgd, x = unit(2, "cm"), y = unit(10, "cm"), just = c("left", "bottom"))
dev.off()
kegg_siggos <- c()
for (i in names(kegg_frysig)) {
print(i)
print(dim(kegg_frysig[[i]]))
print(kegg_frysig[[i]][,c(1,2,4,7)])
kegg_siggos <- c(kegg_siggos, rownames(kegg_frysig[[i]][1:17,]))  # can be modified
}
kegg_siggos <- unique(kegg_siggos[!grepl("NA", kegg_siggos)])
kegg_siggos <- c()
for (i in names(kegg_frysig)) {
print(i)
print(dim(kegg_frysig[[i]]))
print(kegg_frysig[[i]][,c(1,2,4,7)])
kegg_siggos <- c(kegg_siggos, rownames(kegg_frysig[[i]][1:20,]))  # can be modified
}
kegg_siggos <- unique(kegg_siggos[!grepl("NA", kegg_siggos)])
idx_kegg_char <- lapply(idx_kegg, as.character)
# I create a dataframe with mean logFC values for each significant GO-term:
hm_kegg <- t(as.data.frame(lapply(idx_kegg_char[kegg_siggos], function(x){
sapply(names(all_res_tmm), function(y){
mean(na.omit(all_res_tmm[[y]]$table[x,]$logFC))
})
})))
hm_kegg <- as.data.frame(hm_kegg)
rownames(hm_kegg) <- gsub("\\.", "\\:", rownames(hm_kegg))
hm_kegg <- hm_kegg[order(hm_kegg[,1], decreasing = T),]
kegg_sizes <- sapply(idx_kegg_char[rownames(hm_kegg)], function(x) length(x))
pvals <- data.frame(sapply(names(kegg_fry),
function(x) kegg_fry[[x]][rownames(hm_kegg),"FDR"]),
row.names = rownames(hm_kegg))
#select only significant ones:
pvals <-sapply(pvals, function(x) ifelse(x<0.001, x <- "*", x<-"") )
keggpws <- kegg_fry$PNA179[rownames(hm_kegg),] [["TERM"]]
rownames(hm_kegg) <- ifelse(!is.na(keggpws),keggpws, rownames(hm_kegg) )
col_fun = colorRamp2(c(-1,0, 1), c("steelblue", "white", "darkorange"))
ht_vert <- Heatmap(hm_kegg, cluster_rows = F, cluster_columns = F,
name = "GO-analysis", col = col_fun,
show_heatmap_legend = F,
row_title_side = "right", row_title_rot = 0,
border = TRUE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1s", pvals[i, j]), x, y)
},
column_names_gp = gpar(fontsize = 11),
row_names_gp = gpar(fontsize = 10),
row_title = NULL,
width = unit(12, "cm"), height = unit(15, "cm"),
right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
lgd = Legend(col_fun = col_fun, title = expression("mean log"[2]*" FC"), #direction = "horizontal",
title_gp = gpar(fontsize = 12), labels = c("-1", " 0"," 1"), legend_height = unit(6, "cm"),
at = c(-1, 0, 1), border = "black",
title_position = "leftcenter-rot")
draw(lgd)
svg("../analysis/pathway_analysis/hm_KEGG.svg", width = unit(12, "cm"),  height = unit(10, "cm"))
draw(ht_vert)
draw(lgd, x = unit(2, "cm"), y = unit(10, "cm"), just = c("left", "bottom"))
dev.off()
col_fun = colorRamp2(c(-1,0, 1), c("steelblue", "white", "darkorange"))
ht_vert <- Heatmap(hm_kegg, cluster_rows = F, cluster_columns = F,
name = "GO-analysis", col = col_fun,
show_heatmap_legend = F,
row_title_side = "right", row_title_rot = 0,
border = TRUE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1s", pvals[i, j]), x, y)
},
column_names_gp = gpar(fontsize = 11),
row_names_gp = gpar(fontsize = 10),
row_title = NULL,
width = unit(12, "cm"), height = unit(18, "cm"),
right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
lgd = Legend(col_fun = col_fun, title = expression("mean log"[2]*" FC"), #direction = "horizontal",
title_gp = gpar(fontsize = 12), labels = c("-1", " 0"," 1"), legend_height = unit(6, "cm"),
at = c(-1, 0, 1), border = "black",
title_position = "leftcenter-rot")
draw(lgd)
svg("../analysis/pathway_analysis/hm_KEGG.svg", width = unit(12, "cm"),  height = unit(10, "cm"))
draw(ht_vert)
draw(lgd, x = unit(2, "cm"), y = unit(10, "cm"), just = c("left", "bottom"))
dev.off()
col_fun = colorRamp2(c(-1,0, 1), c("steelblue", "white", "darkorange"))
ht_vert <- Heatmap(hm_kegg, cluster_rows = F, cluster_columns = F,
name = "GO-analysis", col = col_fun,
show_heatmap_legend = F,
row_title_side = "right", row_title_rot = 0,
border = TRUE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1s", pvals[i, j]), x, y)
},
column_names_gp = gpar(fontsize = 11),
row_names_gp = gpar(fontsize = 10),
row_title = NULL,
width = unit(12, "cm"), height = unit(20, "cm"),
right_annotation = rowAnnotation(genes = anno_barplot(kegg_sizes)))
ht_vert
lgd = Legend(col_fun = col_fun, title = expression("mean log"[2]*" FC"), #direction = "horizontal",
title_gp = gpar(fontsize = 12), labels = c("-1", " 0"," 1"), legend_height = unit(6, "cm"),
at = c(-1, 0, 1), border = "black",
title_position = "leftcenter-rot")
draw(lgd)
svg("../analysis/pathway_analysis/hm_KEGG.svg", width = unit(12, "cm"),  height = unit(10, "cm"))
draw(ht_vert)
draw(lgd, x = unit(2, "cm"), y = unit(10, "cm"), just = c("left", "bottom"))
dev.off()
alt_names
ht_high_de
ht_list =  ht_high_de_cpm %v% ht_high_de
draw(ht_list)
draw(ht_list)
lgd = Legend(col_fun = col_fun, title = expression("Log"[2]*" FC"), labels_gp = gpar(fontsize = 14),
title_gp = gpar(fontsize = 15),grid_width =  unit(0.8, "cm"),
at = c(-2, 0, 2), legend_width = unit(4, "cm"),
labels = c("-2", "  0", "  2"), legend_height = unit(5, "cm"),
title_position = "leftcenter-rot")
lgd2 = Legend(col_fun = col_fun2, title = expression("Log CPM (centered)"), labels_gp = gpar(fontsize = 12),
title_gp = gpar(fontsize = 15),
at = c(-2, 0, 2), legend_width = unit(4, "cm"), grid_width =  unit(0.8, "cm"),
labels = c("-2", "  0", "  2"), legend_height = unit(5, "cm"),
title_position = "leftcenter-rot")
svg("../analysis/hm_high_de_targets_cpm.svg", width = 21, height = 10)
draw(ht_list, ht_gap = unit(0.5, "cm"))
draw(lgd, x = unit(52, "cm"), y = unit(15.2, "cm"), just = c("right", "bottom"))
draw(lgd2, x = unit(52, "cm"), y = unit(7.5, "cm"), just = c("right", "bottom"))
dev.off()
svg("../analysis/hm_high_de_targets_cpm.svg", width = 21, height = 10)
draw(ht_list, ht_gap = unit(0.5, "cm"))
draw(lgd, x = unit(52, "cm"), y = unit(5, "cm"), just = c("right", "bottom"))
draw(lgd2, x = unit(52, "cm"), y = unit(12.5, "cm"), just = c("right", "bottom"))
dev.off()
svg("../analysis/hm_high_de_targets_cpm.svg", width = 21, height = 10)
draw(ht_list, ht_gap = unit(0.5, "cm"))
draw(lgd, x = unit(52, "cm"), y = unit(4.8, "cm"), just = c("right", "bottom"))
draw(lgd2, x = unit(52, "cm"), y = unit(12.5, "cm"), just = c("right", "bottom"))
dev.off()
gff <-  read.delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223.gff",
header = FALSE) # read.delim(args)
setwd("~/Documents/mason/browser/pnag")
setwd("~/Documents/mason/browser/pnag")
gff <-  read.delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223.gff",
header = FALSE) # read.delim(args)
fastas <- read.delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/genelengths.tsv",
header = FALSE)
head(fastas)
head(gff)
gff <-  read_delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223.gff",
header = FALSE) # read.delim(args)
library(dplyr)
gff <-  read_delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223.gff",
header = FALSE) # read.delim(args)
gff <-  read_delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223.gff",
header = FALSE) # read.delim(args)
rehead(gff)
head(gff)
head(fastas)
fastas[fastas$V1==gff$V1,]
gff$V1
fastas <- read.delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/genelengths.tsv",
header = FALSE, row.names = 1)
head(fastas)
fastas["Ga0066243_1001"]
fastas["Ga0066243_1001",]
fastas[c("Ga0066243_1001", "Ga0066243_1001"),]
fastas[gff$V1,]
fastas[gff$V1,][is.na(fastas[gff$V1,])]
length(fastas[gff$V1,])
length(na.omit(fastas[gff$V1,]))
head)(gff)
head(gff)
gff$RL <- fastas[gff$V1,]
head(gff)
sum(gff$RL < gff$V5)
gff[gff$RL < gff$V5,]
gff[gff$RL < gff$V5,-9]
#change gff if RL is bigger than end:
ifelse(gff$RL < gff$V5, gff$V5 <- gff$RL, gff$V5)
#change gff if RL is bigger than end:
gff <- ifelse(gff$RL < gff$V5, gff$V5 <- gff$RL, gff$V5)
gff[gff$RL < gff$V5,-9]
head(gff)
# import gff and fasta lengths:
gff <-  read.delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223.gff",
header = FALSE) # read.delim(args)
fastas <- read.delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/genelengths.tsv",
header = FALSE, row.names = 1)
# fet length of fasta for each gff entry:
gff$RL <- fastas[gff$V1,]
#change gff if RL is bigger than end:
gff$V5 <- ifelse(gff$RL < gff$V5, gff$V5 <- gff$RL, gff$V5)
gff[gff$RL < gff$V5,-9]
dim(gff)
head(gff)
write.csv(gff[,-10],
file = "./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223_mod.gff",
sep = "\t", col.names = F, row.names = F)
gff[,-10]
write.csv(gff[,-10],
file = "./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223_mod.gff",
sep = "\t", col.names = FALSE, row.names = FALSE)
write.table(gff[,-10],
file = "./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223_mod.gff",
sep = "\t", col.names = FALSE, row.names = FALSE)
write.table(gff[,-10],
file = "./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223_mod.gff",
sep = "\t", col.names = FALSE, row.names = FALSE, quote = FALSE)
# import gff and fasta lengths:
gff <-  read.delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223.gff",
header = FALSE) # read.delim(args)
fastas <- read.delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/genelengths.tsv",
header = FALSE, row.names = 1)
# fet length of fasta for each gff entry:
gff$RL <- fastas[gff$V1,]
#change gff if RL is bigger than end:
gff$V5 <- ifelse(gff$RL < gff$V5, gff$V5 <- gff$RL, gff$V5 <- gff$V5)
write.table(gff[,-10],
file = "./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223_mod.gff",
sep = "\t", col.names = FALSE, row.names = FALSE, quote = FALSE)
# import gff and fasta lengths:
gff <-  read.delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223.gff",
header = FALSE) # read.delim(args)
fastas <- read.delim("./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/genelengths.tsv",
header = FALSE, row.names = 1)
# fet length of fasta for each gff entry:
gff$RL <- fastas[gff$V1,]
#change gff if RL is bigger than end:
gff$V5 <- ifelse(gff$RL < gff$V5, gff$RL, gff$V5)
write.table(gff[,-10],
file = "./static/data/2022_08_13_09_24_27/Ga0066243_109818/reference_sequences/full_transcripts_2606217223_mod.gff",
sep = "\t", col.names = FALSE, row.names = FALSE, quote = FALSE)
gff[gff$V5 == gff$RL,]
gff[gff$V5 == gff$RL,-9]
gff$V1
"abc" + "bce"
abs(-4)
abs(4)
